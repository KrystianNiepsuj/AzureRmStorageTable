steps:
- task: PowerShell@1
  displayName: "Run pester"
  inputs:
    scriptType: inlineScript
    inlineScript: |

      [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
      Uninstall-AzureRm -Force
      $Location = "$(Parameters.Location)"
      $SubscriptionId = (Get-AzureRmContext).SubscriptionId
      $StorageAccountRg = "$(Parameters.StorageAccountRG)"
      $StorageAccountName = "$(Parameters.StorageAccountName)"
      $AzModuleContainer = "$(Parameters.AzModuleContainer)"

      Install-Module -Name Pester -AllowClobber -Force -Scope CurrentUser
      Install-module Az.Storage -MinimumVersion 1.1.0 -AllowClobber -Force -Scope CurrentUser
      Install-module Az.Resources -MinimumVersion 1.2.1 -AllowClobber -Force -Scope CurrentUser

      Import-Module Pester
      Import-Module Az.Accounts
      Import-Module Az.Storage
      Import-Module Az.Resources

      Set-Location "$(Build.Repository.LocalPath)"
      $outputFile = ".\TEST-RESULTS.xml"
      #Invoke-Pester -OutputFile $outputFile -OutputFormat NUnitXml @{Path="./Tests";Parameters=@{SubscriptionId=$SubscriptionId;Location=$Location}}

- task: PublishTestResults@2
  displayName: Publish Test Results
  inputs:
    testRunTitle: Test Results for Pester
    buildPlatform: Windows
    testRunner: NUnit
    testResultsFiles: ./TEST-RESULTS.xml
    failTaskOnFailedTests: true
